# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    tags:
      - '*'        
              
              
jobs:
    build-gradle-project:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout project sources
                uses: actions/checkout@v3
            -   name: Set env
                run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            -   name: Setup Gradle
                uses: gradle/gradle-build-action@v2
            -   name: Run build with Gradle Wrapper
                run: gradle build
            -   name: version
                run: echo "::set-output name=version::$(./bin/azblogfilter --version)"
                id: version
            -   name: release
                uses: actions/create-release@v1
                id: create_release
                with:
                  draft: false
                  prerelease: false
                  release_name: ${{ steps.version.outputs.version }}
                  tag_name: ${{ github.ref }}
                env:
                  GITHUB_TOKEN: ${{ github.token }}
                  
                  
            - name: upload artifact
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ github.token }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./build/libs/DiscordBot.jar
                asset_name: DiscordBot.jar
                asset_content_type: application/java-archive
